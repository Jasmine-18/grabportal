//
//
var script = { name: 'LRedux'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M15.661,15.549c0.688-0.06,1.22-0.664,1.185-1.386c-0.036-0.723-0.628-1.302-1.35-1.302h-0.048 c-0.745,0.024-1.326,0.651-1.303,1.397c0.024,0.379,0.179,0.687,0.391,0.911c-0.827,1.609-2.07,2.794-3.954,3.788 c-1.266,0.663-2.604,0.912-3.905,0.734c-1.089-0.153-1.94-0.64-2.463-1.421c-0.78-1.185-0.852-2.462-0.201-3.74 c0.475-0.924,1.185-1.599,1.658-1.931c-0.118-0.307-0.26-0.827-0.331-1.218c-3.506,2.51-3.148,5.942-2.084,7.564 c0.794,1.184,2.415,1.941,4.19,1.941c0.474,0,0.972-0.035,1.457-0.154c3.077-0.592,5.409-2.438,6.747-5.16L15.661,15.549z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M19.887,12.589c-1.834-2.154-4.533-3.337-7.611-3.337h-0.403c-0.2-0.438-0.661-0.711-1.183-0.711h-0.036 c-0.744,0-1.325,0.64-1.301,1.385c0.023,0.71,0.627,1.302,1.35,1.302h0.059c0.533-0.023,0.994-0.354,1.183-0.828h0.439 c1.824,0,3.551,0.532,5.126,1.574c1.206,0.792,2.072,1.834,2.557,3.077c0.425,1.019,0.402,2.013-0.035,2.843 c-0.675,1.302-1.812,1.988-3.314,1.988c-0.947,0-1.871-0.296-2.345-0.509c-0.283,0.235-0.758,0.626-1.102,0.863 c1.042,0.473,2.096,0.746,3.113,0.746c2.309,0,4.023-1.302,4.676-2.557c0.709-1.422,0.651-3.813-1.161-5.859L19.887,12.589 L19.887,12.589z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M7.647,15.975c0.023,0.71,0.626,1.302,1.35,1.302h0.048c0.757-0.023,1.337-0.65,1.302-1.397 c0-0.71-0.616-1.301-1.338-1.301H8.961c-0.048,0-0.118,0-0.178,0.022c-0.982-1.657-1.397-3.434-1.242-5.349 c0.094-1.445,0.567-2.7,1.42-3.742c0.71-0.888,2.048-1.326,2.96-1.35c2.556-0.048,3.622,3.138,3.704,4.404l1.184,0.354 C16.536,5.036,14.122,3,11.813,3C9.647,3,7.647,4.574,6.842,6.884C5.74,9.961,6.463,12.92,7.813,15.288 C7.695,15.442,7.624,15.714,7.647,15.975L7.647,15.975z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
