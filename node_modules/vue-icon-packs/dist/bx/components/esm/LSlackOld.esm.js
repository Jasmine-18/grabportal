//
//
var script = { name: 'LSlackOld'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M20.935,12.646c-0.28-0.842-1.181-1.3-2.022-1.034l-1.632,0.532c-0.355-1.099-0.735-2.268-1.092-3.365\tc0.001-0.001,0.003-0.001,0.006-0.002c-0.001-0.002-0.003-0.006-0.004-0.008c0.983-0.318,1.613-0.523,1.613-0.523\tc0.842-0.281,1.3-1.182,1.035-2.023c-0.281-0.842-1.184-1.3-2.025-1.034l-1.621,0.527c-0.315-0.976-0.519-1.604-0.519-1.604\tc-0.281-0.842-1.181-1.3-2.024-1.034c-0.842,0.28-1.299,1.181-1.033,2.024l0.522,1.609L8.771,7.803\tc-0.318-0.98-0.524-1.611-0.524-1.611c-0.279-0.841-1.182-1.3-2.022-1.034C5.382,5.438,4.924,6.34,5.191,7.181l0.524,1.616\tL4.053,9.338c-0.782,0.281-1.225,1.138-0.988,1.95c0.25,0.856,1.152,1.373,1.979,1.092c0.006,0,0.658-0.209,1.665-0.536l1.099,3.386\tl-0.002,0v0.002l-1.67,0.545c-0.782,0.28-1.225,1.137-0.987,1.949c0.25,0.857,1.15,1.374,1.979,1.093\tc0.007,0,0.659-0.211,1.665-0.538l0.003,0.005c0.002,0,0.006-0.001,0.008-0.002l0.539,1.657c0.281,0.783,1.138,1.226,1.949,0.989\tc0.857-0.25,1.373-1.151,1.094-1.979c0-0.006-0.209-0.654-0.533-1.654l0,0c-0.001-0.003-0.002-0.006-0.003-0.009\tc1.104-0.358,2.276-0.739,3.376-1.098l0.543,1.668c0.28,0.782,1.138,1.225,1.949,0.989c0.856-0.251,1.374-1.152,1.092-1.979\tc0-0.007-0.209-0.659-0.535-1.663c0.007-0.002,0.013-0.004,0.019-0.006c-0.001-0.002-0.002-0.005-0.003-0.007\tC19.27,14.875,19.9,14.67,19.9,14.67C20.743,14.389,21.201,13.488,20.935,12.646z M10.86,14.238\tc-0.359-1.102-0.739-2.277-1.097-3.377c0.002,0,0.005-0.001,0.005-0.001c0-0.002,0-0.004,0-0.006\tc1.098-0.356,2.268-0.735,3.363-1.092l1.098,3.377L10.86,14.238z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
