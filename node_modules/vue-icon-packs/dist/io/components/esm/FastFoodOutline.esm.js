//
//
var script = { name: 'FastFoodOutline'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 512 512",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d: "M322,416c0,35.35-20.65,64-56,64H134c-35.35,0-56-28.65-56-64"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M336,336c17.67,0,32,17.91,32,40h0c0,22.09-14.33,40-32,40H64c-17.67,0-32-17.91-32-40h0c0-22.09,14.33-40,32-40"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M344,336H179.31a8,8,0,0,0-5.65,2.34l-26.83,26.83a4,4,0,0,1-5.66,0l-26.83-26.83a8,8,0,0,0-5.65-2.34H56a24,24,0,0,1-24-24h0a24,24,0,0,1,24-24H344a24,24,0,0,1,24,24h0A24,24,0,0,1,344,336Z"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d: "M64,276v-.22c0-55,45-83.78,100-83.78h72c55,0,100,29,100,84v-.22"
        }
      }),
      _c("line", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: { x1: "241", y1: "112", x2: "248.44", y2: "175.97" }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: { d: "M256,480H395.31a32,32,0,0,0,31.91-29.61L463,112" }
      }),
      _c("polyline", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-linejoin": "round",
          "stroke-width": "32px"
        },
        attrs: { points: "368 112 384 48 431 32" }
      }),
      _c("line", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: { x1: "224", y1: "112", x2: "480", y2: "112" }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
