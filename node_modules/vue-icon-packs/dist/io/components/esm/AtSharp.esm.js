//
//
var script = { name: 'AtSharp'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 512 512",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M407.6,115.78c-32.07-35-79.47-53.51-137.09-53.51-51,0-100.69,19.8-139.82,55.76S67.56,201.87,63.06,252.86C58.51,304.53,74.47,353.15,108,389.76c33.37,36.44,80.07,56.51,131.49,56.51,32.52,0,53.61-2.36,85.48-15.75l14.75-6.2-12.4-29.5L312.57,401c-27.15,11.4-43.78,13.25-73.08,13.25-42.34,0-80.65-16.38-107.89-46.12-27.4-29.92-40.42-69.86-36.66-112.48,7.84-89,86.6-161.4,175.57-161.4,48.4,0,87.65,14.91,113.49,43.13,24.61,26.87,35.6,63.92,31.79,107.15-3.29,37.35-17.76,55.74-29.32,64.6-11,8.44-22,10.18-28,9.11-17.68-3.13-26.87-20.46-24.59-46.29l9.93-109.12L311.9,160l-2,22.29a79.69,79.69,0,0,0-57.32-24c-23.8,0-46.54,10.07-64,28.37-16.77,17.53-27.23,41.05-29.45,66.22-2.45,27.87,5.75,54.34,22.51,72.64a76.14,76.14,0,0,0,56.88,24.77A93,93,0,0,0,310,318a60,60,0,0,0,42.88,31.81c16.89,3,36.73-2.69,53.08-15.21,30.19-23.13,39.36-60.19,41.74-87.2C452.22,195.7,438,149,407.6,115.78Zm-126.34,186a62.19,62.19,0,0,1-42.81,16.53,43.94,43.94,0,0,1-33.28-14.38c-10.71-11.7-15.9-29.27-14.23-48.22,3.23-36.68,30.29-65.4,61.61-65.4a48.16,48.16,0,0,1,35.88,15.82C299.3,218,304.63,235,303.06,252.86,301.28,273.14,293.73,290,281.26,301.74Z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
