//
//
var script = { name: 'LInvision'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M19.361,3.008H4.638c-0.901,0-1.63,0.729-1.63,1.63v14.724c0,0.9,0.729,1.631,1.63,1.631h14.724\tc0.9,0,1.631-0.73,1.631-1.631V4.638C20.992,3.736,20.262,3.008,19.361,3.008z M9.018,6.505c0.597,0,1.098,0.472,1.098,1.078\tc0,0.616-0.501,1.08-1.098,1.08v0.022c-0.604,0-1.09-0.486-1.09-1.088C7.928,6.992,8.414,6.505,9.018,6.505L9.018,6.505z M16.372,16.857c-1.112,0-1.651-0.662-1.651-1.566c0-0.26,0.033-0.533,0.114-0.812l0.528-1.906c0.068-0.208,0.086-0.405,0.086-0.581\tc0-0.615-0.375-0.984-0.971-0.984c-0.761,0-1.26,0.543-1.52,1.598l-1.033,4.146h-1.811l0.327-1.303\tc-0.534,0.873-1.271,1.412-2.183,1.412c-1.102,0-1.617-0.632-1.617-1.584c0.006-0.272,0.035-0.546,0.096-0.811l0,0l0.826-3.366\tH6.285l0.388-1.43h3.075l-1.216,4.804c-0.08,0.309-0.11,0.559-0.11,0.738c0,0.307,0.148,0.396,0.385,0.452\tc0.146,0.03,1.295,0.011,1.918-1.376l0.798-3.188h-1.294l0.391-1.404h2.787l-0.359,1.617c0.484-0.899,1.452-1.762,2.406-1.762\tc1.012,0,1.855,0.728,1.855,2.111c0,0.4-0.063,0.796-0.18,1.18l-0.52,1.858c-0.043,0.188-0.075,0.347-0.075,0.492\tc0,0.326,0.136,0.484,0.368,0.484c0.238,0,0.553-0.181,0.899-1.172l0.708,0.272C18.095,16.249,17.327,16.857,16.372,16.857\tL16.372,16.857z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
