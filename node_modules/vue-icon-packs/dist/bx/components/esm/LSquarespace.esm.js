//
//
var script = { name: 'LSquarespace'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M20.886,9.264c-1.502-1.5-3.941-1.5-5.475,0l-6.13,6.131c-0.376,0.375-0.376,1,0,1.377c0.375,0.375,1,0.375,1.376,0\tl6.13-6.131c0.749-0.75,1.97-0.75,2.722,0s0.752,1.973,0,2.723l-6.037,6.035c0.751,0.75,1.971,0.75,2.723,0l4.66-4.66\tC22.386,13.205,22.386,10.766,20.886,9.264z M18.822,11.297c-0.377-0.375-1.001-0.375-1.376,0l-6.134,6.162\tc-0.751,0.75-1.97,0.75-2.72,0c-0.376-0.375-1.002-0.375-1.377,0s-0.375,1.002,0,1.375c1.502,1.502,3.942,1.502,5.475,0l6.131-6.129\tC19.196,12.299,19.196,11.672,18.822,11.297z M16.787,5.168c-1.501-1.502-3.941-1.502-5.475,0l-6.131,6.129\tc-0.375,0.377-0.375,1,0,1.375c0.376,0.377,1.001,0.377,1.377,0l6.168-6.129c0.751-0.75,1.977-0.75,2.727,0\tc0.377,0.375,1.002,0.375,1.376,0c0.352-0.406,0.352-1-0.024-1.375H16.787z M14.724,7.199c-0.376-0.377-1.001-0.377-1.376,0\tl-6.131,6.164c-0.749,0.748-1.971,0.748-2.723,0c-0.751-0.75-0.751-1.971,0-2.723l6.037-6.039c-0.751-0.75-1.971-0.75-2.722,0\tL3.118,9.264c-1.501,1.502-1.501,3.941,0,5.475c1.501,1.502,3.94,1.502,5.475,0l6.129-6.131c0.377-0.408,0.377-1.033,0-1.408H14.724\tz"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
