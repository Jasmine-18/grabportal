//
//
var script = { name: 'Bone'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M19.049,4.951c-0.178-0.682-0.53-1.303-1.028-1.801c-1.51-1.51-4.146-1.51-5.656,0c-1.315,1.315-1.521,3.327-0.618,4.86 l-3.714,3.714c-1.505-0.89-3.591-0.649-4.86,0.618c-1.56,1.56-1.56,4.098,0,5.657c0.498,0.498,1.119,0.851,1.8,1.028 c0.178,0.681,0.53,1.302,1.028,1.8C6.756,21.584,7.76,22,8.829,22c1.068,0,2.072-0.416,2.828-1.172 c1.314-1.315,1.521-3.326,0.617-4.859l3.714-3.714c1.507,0.891,3.593,0.65,4.861-0.619c1.56-1.56,1.56-4.097,0-5.656 C20.352,5.481,19.73,5.129,19.049,4.951z M19.436,10.222c-0.756,0.755-2.073,0.756-2.829,0l-0.707-0.707l-6.363,6.364l0.707,0.707 c0.779,0.779,0.779,2.049,0,2.828c-0.757,0.757-2.074,0.755-2.829,0c-0.439-0.439-0.554-0.955-0.571-1.31l-0.047-0.9l-0.9-0.047 c-0.354-0.018-0.87-0.132-1.31-0.571c-0.78-0.78-0.78-2.049,0-2.829C4.964,13.38,5.466,13.172,6,13.172s1.036,0.208,1.414,0.585 l0.707,0.707l6.364-6.363l-0.707-0.707c-0.78-0.78-0.78-2.049,0-2.829c0.756-0.754,2.072-0.754,2.828,0 c0.343,0.343,0.546,0.809,0.572,1.312l0.048,0.897l0.897,0.048c0.503,0.026,0.969,0.229,1.312,0.572 c0.377,0.378,0.585,0.88,0.585,1.414S19.813,9.844,19.436,10.222z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
