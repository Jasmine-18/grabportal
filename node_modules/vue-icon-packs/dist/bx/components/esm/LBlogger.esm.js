//
//
var script = { name: 'LBlogger'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M20.954,10.667c-0.072-0.322-0.272-0.621-0.502-0.745c-0.07-0.039-0.522-0.088-1.004-0.109\tc-0.809-0.036-0.898-0.052-1.152-0.201c-0.405-0.237-0.516-0.493-0.518-1.187c-0.002-1.327-0.554-2.559-1.646-3.67\tc-0.776-0.793-1.645-1.329-2.634-1.629c-0.236-0.072-0.768-0.097-2.545-0.118C8.166,2.975,7.548,3.032,6.597,3.41\tC4.849,4.107,3.589,5.576,3.132,7.46c-0.087,0.353-0.103,0.92-0.124,4.177c-0.025,4.08,0.004,4.68,0.258,5.488\tc0.212,0.668,0.425,1.077,0.861,1.657c0.835,1.108,2.083,1.907,3.334,2.133c0.595,0.107,7.931,0.135,8.683,0.032\tc1.306-0.178,2.331-0.702,3.293-1.684c0.694-0.71,1.129-1.479,1.414-2.499c0.117-0.424,0.127-0.63,0.149-3.117\tC21.017,11.769,21.002,10.889,20.954,10.667z M8.007,8.108c0.313-0.316,0.399-0.329,2.364-0.329c1.764,0,1.822,0.004,2.081,0.134\tc0.375,0.189,0.538,0.456,0.538,0.88c0,0.384-0.153,0.653-0.493,0.869c-0.184,0.115-0.293,0.123-2.021,0.133\tC9.409,9.802,8.56,9.782,8.433,9.747C7.764,9.563,7.515,8.604,8.007,8.108z M15.713,16.145l-0.597,0.098l-3.114,0.035\tc-2.736,0.033-3.511-0.018-3.652-0.08c-0.288-0.124-0.554-0.472-0.602-0.78c-0.042-0.292,0.104-0.696,0.33-0.9\tc0.285-0.257,0.409-0.266,3.911-0.27c3.602-0.002,3.583-0.003,3.925,0.315C16.396,15.013,16.295,15.814,15.713,16.145z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
