//
//
var script = { name: 'SFileJson'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M12.823,15.122c-0.517,0-0.816,0.491-0.816,1.146c0,0.661,0.311,1.126,0.82,1.126 c0.517,0,0.812-0.49,0.812-1.146C13.639,15.644,13.348,15.122,12.823,15.122z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M14,2H6C4.896,2,4,2.896,4,4v16c0,1.104,0.896,2,2,2h12c1.104,0,2-0.896,2-2V8L14,2z M8.022,16.704 c0,0.961-0.461,1.296-1.2,1.296c-0.176,0-0.406-0.029-0.557-0.08l0.086-0.615c0.104,0.035,0.239,0.06,0.391,0.06 c0.319,0,0.52-0.145,0.52-0.67v-2.122h0.761V16.704z M9.481,17.995c-0.385,0-0.766-0.1-0.955-0.205l0.155-0.631 c0.204,0.105,0.521,0.211,0.846,0.211c0.35,0,0.534-0.146,0.534-0.365c0-0.211-0.159-0.331-0.564-0.476 c-0.562-0.195-0.927-0.506-0.927-0.996c0-0.576,0.481-1.017,1.277-1.017c0.38,0,0.659,0.08,0.861,0.171l-0.172,0.615 c-0.135-0.065-0.375-0.16-0.705-0.16s-0.491,0.15-0.491,0.325c0,0.215,0.19,0.311,0.627,0.476c0.596,0.22,0.876,0.53,0.876,1.006 C10.844,17.515,10.407,17.995,9.481,17.995z M12.787,18c-1.001,0-1.586-0.755-1.586-1.716c0-1.012,0.646-1.768,1.642-1.768 c1.035,0,1.601,0.776,1.601,1.707C14.443,17.33,13.773,18,12.787,18z M17.734,17.945h-0.802l-0.721-1.302 c-0.2-0.359-0.419-0.795-0.585-1.19l-0.016,0.005c0.021,0.445,0.031,0.921,0.031,1.472v1.016H14.94v-3.373h0.891l0.701,1.236 c0.2,0.354,0.4,0.775,0.552,1.155h0.014c-0.05-0.445-0.065-0.9-0.065-1.406v-0.985h0.702V17.945z M14,9c-0.553,0-1,0-1,0V4l5,5H14z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
