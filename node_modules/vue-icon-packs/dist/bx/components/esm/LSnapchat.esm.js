//
//
var script = { name: 'LSnapchat'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M12.166,3c0.796,0,3.495,0.223,4.769,3.073c0.426,0.959,0.324,2.589,0.24,3.898l-0.002,0.047\tc-0.011,0.146-0.018,0.278-0.024,0.41c0.061,0.037,0.164,0.072,0.322,0.072c0.241-0.013,0.53-0.096,0.831-0.241\tc0.133-0.07,0.276-0.084,0.373-0.084c0.146,0,0.289,0.023,0.409,0.072c0.361,0.12,0.59,0.385,0.59,0.674\tc0.013,0.361-0.313,0.675-0.975,0.939c-0.071,0.023-0.169,0.061-0.276,0.096c-0.363,0.109-0.917,0.289-1.073,0.651\tc-0.072,0.181-0.049,0.421,0.098,0.697l0.012,0.013c0.048,0.109,1.228,2.795,3.854,3.229c0.204,0.035,0.349,0.217,0.337,0.409\tc0,0.06-0.013,0.119-0.036,0.181c-0.193,0.457-1.023,0.795-2.53,1.021c-0.047,0.073-0.096,0.302-0.132,0.459\tc-0.022,0.144-0.06,0.289-0.107,0.444c-0.061,0.218-0.217,0.325-0.446,0.325h-0.024c-0.107,0-0.251-0.023-0.433-0.059\tc-0.289-0.061-0.614-0.108-1.024-0.108c-0.24,0-0.48,0.012-0.732,0.06c-0.483,0.084-0.904,0.373-1.386,0.71\tc-0.687,0.481-1.469,1.036-2.649,1.036c-0.048,0-0.096-0.012-0.146-0.012h-0.119c-1.181,0-1.951-0.543-2.637-1.036\tc-0.481-0.338-0.89-0.626-1.373-0.711c-0.252-0.035-0.506-0.06-0.745-0.06c-0.435,0-0.771,0.072-1.023,0.12\tc-0.17,0.035-0.314,0.059-0.435,0.059c-0.301,0-0.42-0.179-0.47-0.337c-0.048-0.154-0.071-0.313-0.107-0.456\tc-0.038-0.146-0.085-0.396-0.133-0.458c-1.543-0.179-2.373-0.517-2.565-0.986c-0.025-0.051-0.042-0.12-0.044-0.181\tc-0.013-0.195,0.133-0.374,0.337-0.409c2.625-0.434,3.805-3.119,3.854-3.232l0.013-0.023c0.145-0.277,0.18-0.52,0.096-0.699\tc-0.156-0.349-0.711-0.529-1.07-0.65c-0.098-0.023-0.194-0.06-0.279-0.096c-0.89-0.35-1.011-0.748-0.962-1.024\tc0.072-0.384,0.541-0.637,0.939-0.637c0.117,0,0.217,0.023,0.308,0.06c0.337,0.155,0.635,0.241,0.888,0.241\tc0.188,0,0.309-0.048,0.373-0.085L6.811,9.954C6.731,8.647,6.629,7.019,7.058,6.065c1.236-2.836,3.929-3.054,4.724-3.054L12.117,3\tH12.166L12.166,3z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
