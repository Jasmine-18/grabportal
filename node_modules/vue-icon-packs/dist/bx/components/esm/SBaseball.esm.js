//
//
var script = { name: 'SBaseball'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M21.984,12.236c0.062-2.64-0.904-5.298-2.913-7.308c-2.01-2.009-4.668-2.975-7.308-2.913c0.13,1.472-0.1,2.961-0.673,4.313 L9.25,5.548c0.437-1.03,0.612-2.162,0.526-3.284C7.999,2.667,6.31,3.548,4.929,4.929C3.547,6.311,2.665,8.002,2.263,9.781 c0.866,0.066,1.742-0.025,2.576-0.276l0.575,1.916c-1.1,0.33-2.257,0.443-3.398,0.344c-0.062,2.639,0.904,5.298,2.913,7.307 c2.01,2.009,4.668,2.975,7.307,2.913c-0.1-1.142,0.014-2.299,0.344-3.398l1.916,0.575c-0.251,0.834-0.343,1.71-0.276,2.576 c1.779-0.402,3.471-1.284,4.853-2.666c1.381-1.381,2.262-3.07,2.665-4.848c-1.122-0.086-2.254,0.09-3.284,0.526l-0.78-1.841 C19.023,12.336,20.513,12.106,21.984,12.236z M9.17,9.173c-0.646,0.647-1.386,1.189-2.192,1.612L6.051,9.013 c0.628-0.328,1.202-0.751,1.707-1.255c0.323-0.323,0.615-0.679,0.869-1.059l1.663,1.113C9.962,8.302,9.585,8.76,9.17,9.173z M16.244,16.241c-0.506,0.506-0.929,1.08-1.257,1.708l-1.772-0.927c0.423-0.807,0.965-1.546,1.613-2.194 c0.412-0.413,0.87-0.79,1.359-1.118l1.113,1.663C16.921,15.627,16.565,15.919,16.244,16.241z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
