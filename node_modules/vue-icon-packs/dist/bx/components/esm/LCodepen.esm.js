//
//
var script = { name: 'LCodepen'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M21.838,8.445C21.838,8.444,21.837,8.444,21.838,8.445c-0.002-0.001-0.002-0.002-0.003-0.004l0,0\tc-0.001,0-0.001-0.001-0.001-0.001c0-0.001,0-0.001,0-0.001c-0.063-0.093-0.145-0.171-0.235-0.228l-9.164-6.08\tc-0.255-0.175-0.644-0.175-0.898,0L2.371,8.214C2.278,8.271,2.196,8.351,2.133,8.445C2.04,8.585,1.997,8.742,2,8.897v6.16\tc-0.003,0.153,0.04,0.309,0.131,0.448c0,0,0,0,0,0.001c0.001,0.001,0.001,0.001,0.002,0.002l0,0c0.003,0.006,0.007,0.01,0.01,0.015\tv0.002c0.001,0,0.001,0,0.001,0c0.001,0,0.001,0,0.001,0.001c0.001,0,0.001,0.001,0.001,0.001c0.063,0.088,0.14,0.16,0.226,0.215\tl9.165,6.082c0.128,0.088,0.282,0.139,0.448,0.139c0.169,0,0.323-0.051,0.45-0.139l9.165-6.082c0.091-0.058,0.172-0.134,0.235-0.229\tc0.094-0.141,0.139-0.3,0.136-0.456v-6.16C21.974,8.742,21.93,8.585,21.838,8.445z M12.781,4.273l6.953,4.613l-3.183,2.112\tl-3.771-2.536V4.273z M11.189,4.273v4.189l-3.771,2.536L4.237,8.887L11.189,4.273z M3.594,10.371l2.395,1.59l-2.395,1.611V10.371z M11.189,19.682l-6.96-4.617l3.195-2.15l3.765,2.498V19.682z M11.984,14.029l-3.128-2.078l3.128-2.105l3.131,2.105L11.984,14.029z M12.781,19.682v-4.27l3.766-2.498l3.193,2.15L12.781,19.682z M20.378,13.572l-2.396-1.611l2.396-1.59V13.572z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
