//
//
var script = { name: 'FlowerOutline'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 512 512",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M215.08,156.92c-4.89-24-10.77-56.27-10.77-73.23A51.36,51.36,0,0,1,256,32h0c28.55,0,51.69,23.69,51.69,51.69,0,16.5-5.85,48.95-10.77,73.23"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M215.08,355.08c-4.91,24.06-10.77,56.16-10.77,73.23A51.36,51.36,0,0,0,256,480h0c28.55,0,51.69-23.69,51.69-51.69,0-16.54-5.85-48.93-10.77-73.23"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M355.08,215.08c24.06-4.91,56.16-10.77,73.23-10.77A51.36,51.36,0,0,1,480,256h0c0,28.55-23.69,51.69-51.69,51.69-16.5,0-48.95-5.85-73.23-10.77"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M156.92,215.07c-24-4.89-56.25-10.76-73.23-10.76A51.36,51.36,0,0,0,32,256h0c0,28.55,23.69,51.69,51.69,51.69,16.5,0,48.95-5.85,73.23-10.77"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M296.92,156.92c13.55-20.48,32.3-47.25,44.37-59.31a51.35,51.35,0,0,1,73.1,0h0c20.19,20.19,19.8,53.3,0,73.1-11.66,11.67-38.67,30.67-59.31,44.37"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M156.92,296.92c-20.48,13.55-47.25,32.3-59.31,44.37a51.35,51.35,0,0,0,0,73.1h0c20.19,20.19,53.3,19.8,73.1,0,11.67-11.66,30.67-38.67,44.37-59.31"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M355.08,296.92c20.48,13.55,47.25,32.3,59.31,44.37a51.35,51.35,0,0,1,0,73.1h0c-20.19,20.19-53.3,19.8-73.1,0-11.69-11.69-30.66-38.65-44.37-59.31"
        }
      }),
      _c("path", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: {
          d:
            "M215.08,156.92c-13.53-20.43-32.38-47.32-44.37-59.31a51.35,51.35,0,0,0-73.1,0h0c-20.19,20.19-19.8,53.3,0,73.1,11.61,11.61,38.7,30.68,59.31,44.37"
        }
      }),
      _c("circle", {
        staticStyle: {
          fill: "none",
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-miterlimit": "10",
          "stroke-width": "32px"
        },
        attrs: { cx: "256", cy: "256", r: "64" }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
