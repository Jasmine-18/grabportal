//
//
var script = { name: 'LSass'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M12,2c5.522,0,10,4.478,10,10s-4.478,10-10,10S2,17.522,2,12S6.478,2,12,2z M10.013,15.332\tc0.146,0.537,0.13,1.039-0.021,1.493l-0.054,0.15c-0.021,0.05-0.043,0.1-0.065,0.146c-0.116,0.241-0.271,0.466-0.462,0.675\tc-0.582,0.633-1.394,0.872-1.742,0.671c-0.375-0.219-0.188-1.112,0.487-1.825c0.726-0.765,1.766-1.258,1.766-1.258v-0.002\tL10.013,15.332z M18.271,6.281c-0.452-1.777-3.397-2.362-6.185-1.371C10.43,5.499,8.633,6.425,7.343,7.633\tc-1.536,1.434-1.78,2.684-1.68,3.206c0.355,1.843,2.881,3.048,3.92,3.942v0.005c-0.307,0.149-2.548,1.274-3.072,2.438\tc-0.563,1.225,0.088,2.101,0.513,2.212c1.313,0.363,2.662-0.3,3.388-1.374c0.699-1.051,0.638-2.4,0.337-3.063\tc0.413-0.112,0.899-0.162,1.524-0.086c1.751,0.199,2.101,1.3,2.024,1.75c-0.074,0.449-0.436,0.711-0.561,0.786\tc-0.126,0.076-0.163,0.101-0.151,0.151c0.013,0.074,0.076,0.074,0.175,0.063c0.138-0.025,0.914-0.375,0.951-1.227\tc0.037-1.074-0.988-2.273-2.813-2.25c-0.75,0.014-1.226,0.076-1.563,0.214c-0.025-0.038-0.051-0.063-0.088-0.088\tc-1.125-1.213-3.213-2.063-3.125-3.675c0.025-0.588,0.237-2.137,4-4.012c3.088-1.538,5.551-1.112,5.977-0.175\tc0.61,1.336-1.314,3.825-4.526,4.187c-1.225,0.138-1.862-0.337-2.026-0.513c-0.174-0.188-0.198-0.2-0.261-0.161\tc-0.101,0.05-0.038,0.212,0,0.313c0.1,0.249,0.487,0.688,1.163,0.912c0.587,0.188,2.024,0.299,3.75-0.375\tc1.937-0.749,3.449-2.838,3.012-4.588L18.271,6.281L18.271,6.281z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
