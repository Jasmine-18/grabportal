//
//
var script = { name: 'LJsfiddle'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M19.58,11.375c0.008-0.117,0.018-0.231,0.018-0.35c0-3.243-2.668-5.871-5.959-5.871C11.354,5.146,9.264,6.447,8.26,8.502\tc-0.479-0.37-1.066-0.568-1.674-0.568c-1.521,0-2.752,1.21-2.752,2.704c0,0.283,0.043,0.554,0.125,0.808\tc-1.223,0.706-1.977,2.008-1.98,3.418c0,2.173,1.773,3.938,3.975,3.972h11.898c0.074,0,0.15,0.012,0.227,0.012\tc2.178,0,3.943-1.739,3.943-3.893c-0.01-1.576-0.969-2.988-2.432-3.579H19.58L19.58,11.375z M7.355,15.842\tc-0.398-0.361-0.65-0.801-0.748-1.318c-0.035-0.181-0.053-0.363-0.053-0.544c0-0.74,0.27-1.347,0.809-1.827\tc0.537-0.48,1.221-0.722,2.049-0.722c0.854,0,1.654,0.32,2.363,0.957c0.176,0.158,0.352,0.338,0.514,0.536l0.912,1.071\tc0.158,0.217,0.324,0.399,0.5,0.56c0.471,0.422,0.977,0.632,1.408,0.632c0.365,0,0.67-0.112,0.912-0.336\tc0.209-0.19,0.336-0.45,0.363-0.73l0.008-0.123c0.002-0.118-0.018-0.234-0.055-0.347c-0.189-0.518-0.688-0.855-1.238-0.838\tc-0.453,0-0.902,0.153-1.396,0.631l-0.807-0.95l-0.088-0.108c0.713-0.691,1.414-0.95,2.367-0.95c0.838,0,1.525,0.237,2.037,0.712\tl0.014,0.014c0.539,0.474,0.801,1.089,0.801,1.842c0,0.177-0.014,0.365-0.049,0.528c-0.102,0.511-0.352,0.938-0.74,1.301\tc-0.396,0.363-0.893,0.599-1.428,0.677c-0.186,0.024-0.375,0.038-0.588,0.038c-0.863,0-1.676-0.313-2.365-0.938\tc-0.195-0.177-0.375-0.372-0.537-0.576l-0.914-1.065c-0.143-0.202-0.305-0.394-0.488-0.563c-0.463-0.425-0.977-0.626-1.428-0.626\tc-0.129,0-0.26,0.018-0.389,0.051c-0.195,0.051-0.377,0.149-0.523,0.289c-0.232,0.216-0.365,0.52-0.365,0.839\tc0,0.324,0.113,0.6,0.352,0.825l0.014,0.013c0.25,0.227,0.563,0.338,0.926,0.338c0.463,0,0.914-0.162,1.4-0.639l0.801,0.938\tl0.088,0.099c-0.725,0.703-1.428,0.965-2.342,0.965c-0.838,0-1.525-0.238-2.051-0.713L7.355,15.842L7.355,15.842z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
