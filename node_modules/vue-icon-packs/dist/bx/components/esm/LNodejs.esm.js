//
//
var script = { name: 'LNodejs'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M12,21.985c-0.275,0-0.532-0.074-0.772-0.202l-2.439-1.448c-0.365-0.203-0.182-0.277-0.072-0.314 c0.496-0.165,0.588-0.201,1.101-0.493c0.056-0.037,0.129-0.02,0.185,0.017l1.87,1.12c0.074,0.036,0.166,0.036,0.221,0l7.319-4.237 c0.074-0.036,0.11-0.11,0.11-0.202V7.768c0-0.091-0.036-0.165-0.11-0.201l-7.319-4.219c-0.073-0.037-0.165-0.037-0.221,0 L4.552,7.566c-0.073,0.036-0.11,0.129-0.11,0.201v8.457c0,0.073,0.037,0.166,0.11,0.202l2,1.157 c1.082,0.548,1.762-0.095,1.762-0.735V8.502c0-0.11,0.091-0.221,0.22-0.221h0.936c0.108,0,0.22,0.092,0.22,0.221v8.347 c0,1.449-0.788,2.294-2.164,2.294c-0.422,0-0.752,0-1.688-0.46l-1.925-1.099c-0.479-0.277-0.771-0.791-0.771-1.34V7.786 c0-0.55,0.293-1.064,0.771-1.339l7.316-4.237c0.461-0.258,1.084-0.258,1.544,0l7.317,4.237c0.479,0.274,0.771,0.789,0.771,1.339 v8.458c0,0.549-0.293,1.063-0.771,1.34l-7.317,4.236C12.532,21.93,12.257,21.985,12,21.985L12,21.985z M14.256,16.169 c-3.21,0-3.87-1.468-3.87-2.714c0-0.11,0.092-0.221,0.22-0.221h0.954c0.11,0,0.201,0.073,0.201,0.184 c0.147,0.971,0.568,1.449,2.514,1.449c1.54,0,2.202-0.35,2.202-1.175c0-0.477-0.185-0.825-2.587-1.063 c-1.999-0.2-3.246-0.643-3.246-2.238c0-1.485,1.247-2.366,3.339-2.366c2.347,0,3.503,0.809,3.649,2.568 c0,0.055-0.019,0.109-0.056,0.165c-0.037,0.036-0.091,0.073-0.146,0.073h-0.953c-0.094,0-0.185-0.073-0.202-0.164 c-0.221-1.012-0.789-1.34-2.292-1.34c-1.689,0-1.891,0.587-1.891,1.027c0,0.531,0.237,0.696,2.514,0.99 c2.256,0.293,3.32,0.715,3.32,2.294C17.906,15.253,16.587,16.169,14.256,16.169L14.256,16.169z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
