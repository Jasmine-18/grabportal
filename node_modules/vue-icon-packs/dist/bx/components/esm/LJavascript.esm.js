//
//
var script = { name: 'LJavascript'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M3,3h18v18H3V3z M19.525,16.707c-0.131-0.821-0.666-1.511-2.252-2.155c-0.552-0.259-1.165-0.438-1.349-0.854\tc-0.068-0.248-0.078-0.382-0.034-0.529c0.113-0.484,0.687-0.629,1.137-0.495c0.293,0.09,0.563,0.315,0.732,0.676\tc0.775-0.507,0.775-0.507,1.316-0.844c-0.203-0.314-0.304-0.451-0.439-0.586c-0.473-0.528-1.103-0.798-2.126-0.775l-0.528,0.067\tc-0.507,0.124-0.991,0.395-1.283,0.754c-0.855,0.968-0.608,2.655,0.427,3.354c1.023,0.765,2.521,0.933,2.712,1.653\tc0.18,0.878-0.652,1.159-1.475,1.058c-0.607-0.136-0.945-0.439-1.316-1.002l-1.372,0.788c0.157,0.359,0.337,0.517,0.607,0.832\tc1.305,1.316,4.568,1.249,5.153-0.754c0.021-0.067,0.18-0.528,0.056-1.237L19.525,16.707L19.525,16.707z M12.788,11.273h-1.686\tc0,1.453-0.007,2.898-0.007,4.354c0,0.924,0.047,1.772-0.104,2.033c-0.247,0.517-0.886,0.451-1.175,0.359\tc-0.297-0.146-0.448-0.349-0.623-0.641c-0.047-0.078-0.082-0.146-0.095-0.146L7.73,18.076c0.229,0.473,0.563,0.879,0.994,1.137\tc0.641,0.383,1.502,0.507,2.404,0.305c0.588-0.17,1.095-0.519,1.358-1.059c0.384-0.697,0.302-1.553,0.299-2.509\tc0.008-1.541,0-3.083,0-4.635L12.788,11.273L12.788,11.273z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
