//
//
var script = { name: 'RotateRight'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M16.242 17.242c-.407.407-.868.752-1.37 1.027l.961 1.754c.668-.366 1.282-.826 1.822-1.365.267-.267.518-.556.747-.86l-1.6-1.201C16.631 16.825 16.443 17.042 16.242 17.242zM17.985 12.571C17.995 12.713 18 12.855 18 13c0 .724-.127 1.43-.377 2.099l1.873.701C19.83 14.905 20 13.964 20 13c0-.193-.007-.383-.021-.571L17.985 12.571zM19.497 10.203C19.1 9.139 18.463 8.15 17.656 7.344l-1.414 1.414c.605.605 1.083 1.348 1.382 2.146L19.497 10.203zM11.369 18.966c-.047-.005-.094-.015-.141-.021-.157-.021-.313-.043-.468-.075-.589-.123-1.151-.335-1.675-.627-.208-.116-.407-.247-.601-.388-.049-.035-.097-.07-.145-.107-.204-.157-.4-.323-.583-.506-.185-.185-.355-.388-.516-.597-.385-.499-.683-1.049-.891-1.634-.105-.296-.189-.596-.247-.902-.008-.043-.012-.088-.019-.131C6.033 13.657 6 13.332 6 13.002c0 0 0-.001 0-.002 0-1.603.624-3.109 1.758-4.242C8.651 7.864 9.778 7.293 11 7.089V10l5-4-5-4v3.069C9.242 5.287 7.615 6.07 6.344 7.344 4.832 8.854 4 10.861 4 12.999l0 0c0 0 0 0 0 .001l0 0c0 .003 0 .005 0 .008 0 .253.014.504.037.753.007.076.021.15.03.227.021.172.044.345.076.516.019.1.044.196.066.295.032.142.065.283.105.423.032.112.07.223.107.333.026.079.047.159.076.237l.008-.003C4.771 16.5 5.138 17.171 5.6 17.785L5.593 17.79c.021.028.049.053.07.081.211.272.433.538.681.785.245.245.508.466.777.675.063.048.125.095.189.141.265.192.537.372.821.529.01.006.019.013.028.019l.001-.001c.669.367 1.387.634 2.136.795l-.001.005c.018.004.035.005.053.009.201.042.405.071.61.098.069.009.138.023.207.03C11.441 20.984 11.72 21 12 21c.571 0 1.143-.061 1.697-.181l-.424-1.955C12.654 18.998 12.004 19.031 11.369 18.966z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
