//
//
var script = { name: 'SVirus'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M21,11h-0.17c-1.053,0-1.958-0.669-2.357-1.644c-0.007-0.017-0.014-0.032-0.021-0.049c-0.408-0.977-0.249-2.097,0.5-2.846 l0.119-0.119c0.391-0.391,0.391-1.023,0-1.414s-1.023-0.391-1.414,0l-0.119,0.119c-0.749,0.749-1.869,0.908-2.846,0.5 c-0.017-0.007-0.032-0.014-0.049-0.021C13.669,5.128,13,4.218,13,3.165c0-0.052,0-0.081,0-0.081C13,2.447,12.553,2,12,2 s-1,0.447-1,1v0.036c0,1.096-0.66,2.084-1.673,2.503L9.321,5.542C8.309,5.961,7.143,5.729,6.368,4.954L6.343,4.929 c-0.391-0.391-1.023-0.391-1.414,0s-0.391,1.023,0,1.414l0.036,0.036c0.769,0.769,0.998,1.925,0.583,2.929L5.521,9.372 C5.113,10.357,4.151,11,3.085,11H3.084C2.447,11,2,11.447,2,12s0.447,1,1,1h0.068c1.076,0,2.047,0.648,2.459,1.644l0.021,0.049 c0.415,1.004,0.186,2.16-0.583,2.929l-0.036,0.036c-0.391,0.391-0.391,1.023,0,1.414s1.023,0.391,1.414,0l0.036-0.036 c0.769-0.769,1.924-0.998,2.929-0.583l0.143,0.06C10.389,18.9,11,19.815,11,20.83v0.085C11,21.553,11.447,22,12,22s1-0.448,1-1 v-0.17c0-1.015,0.611-1.93,1.55-2.318l0.252-0.104c0.938-0.389,2.018-0.174,2.736,0.545l0.119,0.119 c0.391,0.391,1.023,0.391,1.414,0s0.391-1.023,0-1.414l-0.119-0.119c-0.749-0.749-0.908-1.869-0.5-2.846 c0.007-0.017,0.014-0.032,0.021-0.049C18.872,13.669,19.782,13,20.835,13c0.052,0,0.08,0,0.08,0C21.553,13,22,12.553,22,12 S21.553,11,21,11z M8,13c-0.553,0-1-0.448-1-1c0-0.553,0.447-1,1-1s1,0.447,1,1C9,12.552,8.553,13,8,13z M13,16.5 c-0.553,0-1-0.448-1-1c0-0.553,0.447-1,1-1s1,0.447,1,1C14,16.052,13.553,16.5,13,16.5z M14,12c-1.104,0-2-0.896-2-2s0.896-2,2-2 s2,0.896,2,2S15.104,12,14,12z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
