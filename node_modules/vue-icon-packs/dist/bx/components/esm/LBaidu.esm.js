//
//
var script = { name: 'LBaidu'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M6.217,12.486c1.964-0.422,1.693-2.772,1.637-3.287C7.758,8.411,6.826,7.027,5.563,7.138\tc-1.588,0.141-1.821,2.44-1.821,2.44C3.526,10.638,4.257,12.908,6.217,12.486 M9.863,8.542c1.084,0,1.959-1.251,1.959-2.792\tc0-1.537-0.871-2.785-1.955-2.785c-1.086,0-1.966,1.242-1.966,2.785s0.88,2.792,1.965,2.792 M14.537,8.728\tc1.454,0.195,2.38-1.355,2.568-2.53c0.188-1.166-0.754-2.528-1.776-2.763c-1.031-0.237-2.303,1.411-2.431,2.484\tc-0.136,1.318,0.188,2.627,1.634,2.813 M20.283,10.705c0-0.562-0.46-2.253-2.19-2.253c-1.729,0-1.965,1.596-1.965,2.726\tc0,1.077,0.089,2.573,2.247,2.528c2.148-0.052,1.913-2.438,1.913-3.002 M18.1,15.626c0,0-2.247-1.739-3.557-3.613\tc-1.776-2.768-4.304-1.64-5.144-0.239c-0.845,1.418-2.153,2.306-2.339,2.544c-0.188,0.232-2.709,1.596-2.147,4.079\tc0.563,2.483,2.528,2.439,2.528,2.439s1.446,0.142,3.133-0.234c1.686-0.375,3.13,0.091,3.13,0.091s3.92,1.317,5.005-1.212\tc1.072-2.537-0.61-3.847-0.61-3.847"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
