//
//
var script = { name: 'LCPlusPlus'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M6.078,12c0-3.266,2.656-5.922,5.922-5.922c2.107,0,4.072,1.134,5.129,2.959L15.63,9.904l5.027-2.902 c-0.14-0.242-0.332-0.453-0.543-0.575l-7.345-4.24c-0.424-0.245-1.116-0.245-1.539,0l-7.345,4.24 C3.463,6.671,3.117,7.271,3.117,7.76v8.48c0,0.245,0.086,0.517,0.226,0.758l3.529-2.038C6.367,14.089,6.078,13.078,6.078,12z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M14.564,10.519c-0.528-0.913-1.511-1.48-2.564-1.48c-1.633,0-2.961,1.328-2.961,2.961c0,0.539,0.146,1.044,0.397,1.48 L12,12L14.564,10.519z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M20.657,7.002l-5.046,2.913l-1.046,0.605c0,0,0,0-0.001-0.001L12,12l-2.563,1.48c0.513,0.884,1.47,1.481,2.563,1.481 c1.054,0,2.037-0.567,2.565-1.481l2.563,1.483c-1.057,1.825-3.021,2.959-5.129,2.959c-2.188,0-4.103-1.193-5.128-2.962 l-3.529,2.038c0.14,0.242,0.332,0.453,0.543,0.575l7.345,4.24c0.423,0.245,1.115,0.245,1.539,0l7.345-4.24 c0.211-0.122,0.403-0.333,0.543-0.575c0.14-0.241,0.226-0.513,0.226-0.758V7.76C20.883,7.515,20.797,7.243,20.657,7.002z M17.922,12.329h-0.658v0.658h-0.657v-0.658h-0.658v-0.658h0.658v-0.658h0.657v0.658h0.658V12.329z M20.39,12.329h-0.658v0.658 h-0.658v-0.658h-0.657v-0.658h0.657v-0.658h0.658v0.658h0.658V12.329z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
