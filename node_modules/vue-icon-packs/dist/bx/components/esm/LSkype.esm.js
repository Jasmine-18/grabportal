//
//
var script = { name: 'LSkype'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M12.857,17.417c-2.947,0-4.294-1.524-4.294-2.641c0-0.266,0.108-0.521,0.298-0.705 c0.19-0.183,0.447-0.279,0.71-0.264c1.261,0,0.931,1.92,3.286,1.92c1.203,0,1.91-0.736,1.91-1.425 c0-0.415-0.234-0.889-1.028-1.079l-2.629-0.673c-2.111-0.545-2.479-1.737-2.479-2.842c0-2.293,2.068-3.124,4.036-3.124 c1.814,0,3.97,1.016,3.97,2.391c0,0.592-0.488,0.91-1.055,0.91c-1.078,0-0.897-1.536-3.063-1.536c-1.077,0-1.645,0.513-1.645,1.23 c0,0.717,0.839,0.96,1.574,1.123l1.941,0.445c2.126,0.486,2.691,1.751,2.691,2.963c0,1.865-1.423,3.305-4.226,3.305 M20.993,13.473c0.086-0.49,0.128-0.986,0.128-1.482c0.01-2.495-1.071-4.866-2.952-6.474c-1.879-1.609-4.365-2.288-6.788-1.856 C10.638,3.226,9.794,2.998,8.935,3c-1.763,0.01-3.387,0.97-4.27,2.519C3.784,7.068,3.778,8.976,4.65,10.53 c-0.487,2.714,0.366,5.497,2.282,7.453c1.917,1.955,4.655,2.835,7.333,2.355c0.743,0.435,1.586,0.663,2.443,0.662 c1.764-0.011,3.386-0.97,4.269-2.518C21.859,16.934,21.866,15.027,20.993,13.473",
          transform: "translate(-1)"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
