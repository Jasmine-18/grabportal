//
//
var script = { name: 'LBitcoin'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M11.953 8.819l-.547 2.19c.619.154 2.529.784 2.838-.456C14.566 9.262 12.571 8.974 11.953 8.819zM11.131 12.115l-.603 2.415c.743.185 3.037.921 3.376-.441C14.259 12.667 11.875 12.3 11.131 12.115z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M14.421,2.299C9.064,0.964,3.641,4.224,2.306,9.581c-1.336,5.355,1.924,10.78,7.277,12.116 c5.357,1.335,10.783-1.924,12.117-7.281C23.036,9.06,19.776,3.635,14.421,2.299z M16.412,10.574 c-0.145,0.974-0.686,1.445-1.402,1.611c0.985,0.512,1.485,1.298,1.009,2.661c-0.592,1.691-1.998,1.834-3.87,1.48l-0.454,1.82 l-1.096-0.273l0.447-1.794c-0.283-0.071-0.574-0.146-0.875-0.228l-0.449,1.804L8.627,17.38l0.454-1.823 c-0.257-0.066-0.517-0.136-0.782-0.202L6.87,15l0.546-1.256c0,0,0.808,0.215,0.797,0.199c0.311,0.077,0.448-0.125,0.502-0.261 l0.719-2.875c0.04,0.01,0.079,0.02,0.115,0.029c-0.044-0.018-0.083-0.029-0.114-0.037l0.512-2.053 C9.96,8.512,9.881,8.218,9.436,8.107c0.018-0.011-0.797-0.198-0.797-0.198L8.93,6.737l1.514,0.378l-0.001,0.005 c0.227,0.057,0.461,0.111,0.7,0.165l0.449-1.802l1.097,0.273l-0.44,1.766c0.294,0.067,0.591,0.135,0.879,0.207l0.438-1.755 l1.097,0.273l-0.449,1.802C15.598,8.528,16.61,9.244,16.412,10.574z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
