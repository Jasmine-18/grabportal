//
//
var script = { name: 'SFaceMask'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M12,2C6.486,2,2,6.486,2,12c0,2.521,0.945,4.82,2.49,6.582c1.24,1.52,3.266,3.066,6.439,3.358 C11.281,21.979,11.639,22,12,22s0.719-0.021,1.07-0.06c3.174-0.292,5.199-1.839,6.439-3.358C21.055,16.82,22,14.521,22,12 C22,6.486,17.514,2,12,2z M4.709,8.724C4.863,8.814,5.017,8.906,5.165,9c0.396,0.25,0.791,0.5,1.286,0.688 C6.945,9.875,7.539,10,8.33,10c0.792,0,1.386-0.125,1.881-0.313S11.102,9.25,11.498,9s0.792-0.5,1.287-0.688 C13.279,8.125,13.873,8,14.665,8s1.386,0.125,1.88,0.313C17.04,8.5,17.436,8.75,17.832,9s0.792,0.5,1.287,0.688 c0.178,0.067,0.374,0.122,0.581,0.171C19.891,10.541,20,11.257,20,12c0,0.843-0.133,1.654-0.375,2.417 c-0.261,0.195-0.733,0.474-1.577,0.756c-0.769,0.256-1.672,0.458-2.685,0.602c-2.129,0.299-4.598,0.299-6.727,0 c-1.013-0.144-1.916-0.346-2.685-0.602c-0.844-0.282-1.316-0.561-1.577-0.756C4.133,13.654,4,12.843,4,12 C4,10.832,4.258,9.725,4.709,8.724z"
        }
      }),
      _c("circle", { attrs: { cx: "8.5", cy: "12.5", r: "1.5" } }),
      _c("circle", { attrs: { cx: "15.5", cy: "12.5", r: "1.5" } })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
