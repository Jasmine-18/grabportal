//
//
var script = { name: 'LVisa'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M16.539,9.186c-0.322-0.122-0.826-0.251-1.451-0.251c-1.6,0-2.73,0.806-2.738,1.963c-0.01,0.85,0.803,1.329,1.418,1.613\tc0.631,0.292,0.842,0.476,0.84,0.737c-0.004,0.397-0.504,0.577-0.969,0.577c-0.639,0-0.988-0.089-1.525-0.312l-0.199-0.093\tl-0.227,1.332c0.389,0.162,1.09,0.301,1.814,0.313c1.701,0,2.813-0.801,2.826-2.032c0.014-0.679-0.426-1.192-1.352-1.616\tc-0.563-0.275-0.912-0.459-0.912-0.738c0-0.247,0.299-0.511,0.924-0.511c0.539-0.008,0.914,0.108,1.213,0.229l0.15,0.067\tl0.227-1.287L16.539,9.186L16.539,9.186z M20.691,9.043h-1.25c-0.389,0-0.682,0.107-0.852,0.493l-2.404,5.446h1.701l0.34-0.893\tl2.076,0.002c0.049,0.209,0.199,0.891,0.199,0.891h1.5L20.691,9.043L20.691,9.043z M10.049,8.993h1.621l-1.014,5.942H9.037\tl1.012-5.944V8.993z M5.934,12.268l0.168,0.825l1.584-4.05h1.717l-2.551,5.931H5.139l-1.4-5.022C3.709,9.865,3.674,9.807,3.59,9.753\tC3.115,9.506,2.586,9.305,1.998,9.164L2.02,9.039h2.609c0.354,0.014,0.639,0.125,0.734,0.503l0.57,2.729V12.268z M18.691,12.874\tl0.646-1.662c-0.008,0.018,0.133-0.343,0.215-0.566l0.111,0.513l0.375,1.714h-1.348V12.874L18.691,12.874z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
