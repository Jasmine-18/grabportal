//
//
var script = { name: 'LReddit'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("circle", { attrs: { cx: "9.67", cy: "13", r: "1.001" } }),
      _c("path", {
        attrs: {
          d:
            "M14.09,15.391C13.482,15.826,12.746,16.041,12,16c-0.744,0.034-1.479-0.189-2.081-0.63c-0.099-0.081-0.242-0.081-0.342,0\tc-0.115,0.095-0.132,0.265-0.037,0.38c0.71,0.535,1.582,0.809,2.471,0.77c0.887,0.039,1.76-0.233,2.469-0.77v0.04\tc0.109-0.106,0.111-0.285,0.006-0.396C14.377,15.284,14.2,15.282,14.09,15.391z M14.299,12.04c-0.552,0-0.999,0.448-0.999,1.001\tc0,0.552,0.447,0.999,0.999,0.999l-0.008,0.039c0.016,0.002,0.033,0,0.051,0c0.551-0.021,0.979-0.487,0.958-1.038\tC15.3,12.488,14.854,12.04,14.299,12.04z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M12,2C6.479,2,2,6.477,2,12c0,5.521,4.479,10,10,10c5.521,0,10-4.479,10-10C22,6.477,17.521,2,12,2z M17.859,13.33\tc0.012,0.146,0.012,0.293,0,0.439c0,2.24-2.609,4.062-5.83,4.062c-3.221,0-5.83-1.82-5.83-4.062c-0.012-0.146-0.012-0.293,0-0.439\tc-0.145-0.066-0.275-0.155-0.392-0.264c-0.587-0.553-0.614-1.478-0.063-2.063c0.552-0.588,1.477-0.616,2.063-0.063\tc1.152-0.781,2.509-1.209,3.899-1.23l0.743-3.47c0-0.001,0-0.002,0-0.004C12.487,6.069,12.652,5.964,12.82,6l2.449,0.49\tc0.16-0.275,0.44-0.458,0.758-0.492c0.55-0.059,1.041,0.338,1.102,0.888c0.059,0.549-0.338,1.042-0.889,1.101\tc-0.549,0.059-1.041-0.338-1.102-0.887L13,6.65l-0.649,3.12c1.375,0.029,2.711,0.457,3.85,1.23c0.259-0.248,0.599-0.393,0.957-0.406\tc0.807-0.029,1.482,0.6,1.512,1.406C18.68,12.563,18.363,13.08,17.859,13.33z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
