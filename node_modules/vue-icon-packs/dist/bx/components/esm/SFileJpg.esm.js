//
//
var script = { name: 'SFileJpg'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M14,2H6C4.896,2,4,2.896,4,4v16c0,1.104,0.896,2,2,2h12c1.104,0,2-0.896,2-2V8L14,2z M9.239,16.446 C9.239,17.598,8.688,18,7.801,18c-0.21,0-0.486-0.036-0.665-0.097l0.101-0.737c0.127,0.042,0.289,0.072,0.469,0.072 c0.384,0,0.623-0.174,0.623-0.804v-2.543h0.911V16.446z M12.533,16.081c-0.313,0.293-0.773,0.426-1.313,0.426 c-0.12,0-0.228-0.007-0.312-0.019v1.445h-0.906v-3.988c0.283-0.048,0.679-0.083,1.236-0.083c0.563,0,0.965,0.107,1.234,0.323 c0.259,0.204,0.433,0.54,0.433,0.936S12.772,15.853,12.533,16.081z M16.864,17.748c-0.28,0.096-0.815,0.228-1.349,0.228 c-0.737,0-1.271-0.186-1.643-0.546c-0.371-0.348-0.575-0.875-0.57-1.469c0.007-1.344,0.983-2.111,2.309-2.111 c0.521,0,0.924,0.103,1.121,0.198l-0.191,0.731c-0.222-0.096-0.497-0.174-0.941-0.174c-0.761,0-1.338,0.432-1.338,1.308 c0,0.833,0.523,1.325,1.271,1.325c0.211,0,0.378-0.024,0.451-0.061v-0.846H15.36v-0.713h1.504V17.748z M14,9c-0.553,0-1,0-1,0V4 l5,5H14z"
        }
      }),
      _c("path", {
        attrs: {
          d:
            "M11.285,14.552c-0.186,0-0.312,0.018-0.377,0.036v1.193c0.077,0.018,0.174,0.023,0.307,0.023 c0.484,0,0.784-0.246,0.784-0.659C11.999,14.773,11.742,14.552,11.285,14.552z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
