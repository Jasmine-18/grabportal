//
//
var script = { name: 'LBootstrap'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M18.002,2.997H5.999C4.343,3.002,3.002,4.343,2.997,6v12.002c0,1.649,1.352,3.001,3.002,3.001h12.003\tc1.649,0,3.001-1.352,3.001-3.001V6C21.003,4.349,19.651,2.997,18.002,2.997z M16.362,15.644c-0.152,0.36-0.389,0.68-0.693,0.927\tc-0.315,0.253-0.715,0.463-1.206,0.614c-0.49,0.151-1.074,0.229-1.75,0.229H7.888V6.909h5.103c0.943,0,1.7,0.213,2.267,0.646\tc0.569,0.436,0.854,1.082,0.854,1.958c0,0.528-0.13,0.983-0.389,1.357c-0.259,0.373-0.63,0.664-1.111,0.868v0.034\tc0.642,0.135,1.137,0.438,1.464,0.912c0.327,0.473,0.493,1.069,0.493,1.789c0,0.405-0.078,0.788-0.225,1.147l0.02,0.021V15.644z M14.278,13.055c-0.309-0.282-0.739-0.419-1.297-0.419H9.737v3.276h3.253c0.554,0,0.991-0.144,1.298-0.435\tc0.308-0.289,0.464-0.701,0.464-1.229c-0.005-0.518-0.156-0.919-0.464-1.193h-0.014H14.278z M13.827,10.936\tc0.299-0.251,0.444-0.613,0.444-1.084c0-0.526-0.131-0.902-0.397-1.116C13.61,8.522,13.228,8.41,12.728,8.41H9.727v2.898h3.001\tC13.164,11.309,13.538,11.181,13.827,10.936L13.827,10.936z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
