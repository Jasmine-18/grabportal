//
//
var script = { name: 'Brush'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M13.707,2.293c-0.391-0.391-1.023-0.391-1.414,0l-5.84,5.84C6.438,8.132,6.424,8.124,6.409,8.124 c-0.265,0-0.52,0.105-0.707,0.293L4.288,9.831c-0.566,0.567-0.878,1.321-0.878,2.122c0,0.802,0.313,1.556,0.879,2.121l0.707,0.707 l-2.122,2.122C2.299,17.477,1.989,18.234,2,19.012c-0.011,0.887,0.377,1.729,1.063,2.308C3.582,21.759,4.251,22,4.948,22 c0.834,0,1.654-0.341,2.25-0.937l2.04-2.039l0.707,0.706c1.134,1.133,3.109,1.134,4.242,0.001l1.415-1.414 c0.188-0.188,0.293-0.441,0.293-0.707c0-0.026-0.013-0.05-0.015-0.076l5.827-5.827c0.391-0.391,0.391-1.023,0-1.414L13.707,2.293z M12.772,18.317c-0.377,0.377-1.036,0.378-1.414-0.001l-1.414-1.413c-0.391-0.391-1.023-0.391-1.414,0l-2.746,2.745 C5.561,19.872,5.256,20,4.948,20c-0.159,0-0.391-0.036-0.594-0.208C4.122,19.597,3.997,19.327,4,19.01 c-0.003-0.258,0.099-0.504,0.287-0.692l2.829-2.829c0.391-0.391,0.391-1.023,0-1.414l-1.415-1.415 c-0.188-0.188-0.292-0.438-0.292-0.706s0.104-0.519,0.293-0.708l0.707-0.707l7.071,7.072L12.772,18.317z M14.661,15.925 L8.075,9.339L13,4.414L19.586,11L14.661,15.925z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
