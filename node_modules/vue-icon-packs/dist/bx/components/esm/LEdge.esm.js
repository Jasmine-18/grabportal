//
//
var script = { name: 'LEdge'};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "svg",
    {
      attrs: {
        width: "1em",
        height: "1em",
        viewBox: "0 0 24 24",
        fill: "currentColor"
      }
    },
    [
      _c("path", {
        attrs: {
          d:
            "M20.349,13.684H8.874c0,0.433,0.063,0.825,0.195,1.178c0.141,0.349,0.323,0.66,0.557,0.933\tc0.231,0.272,0.505,0.504,0.824,0.701c0.309,0.196,0.646,0.359,1.005,0.484c0.356,0.13,0.729,0.226,1.107,0.288\tc0.821,0.13,1.658,0.123,2.477-0.021c0.423-0.078,0.832-0.183,1.235-0.313c0.404-0.133,0.795-0.29,1.186-0.47\tc0.393-0.18,0.79-0.376,1.201-0.594v3.805c-0.459,0.223-0.907,0.412-1.357,0.573c-0.448,0.158-0.897,0.296-1.354,0.405\tc-0.457,0.112-0.92,0.196-1.396,0.246c-0.486,0.054-0.975,0.079-1.464,0.079c-0.674,0-1.324-0.079-1.95-0.232\tc-0.612-0.149-1.204-0.374-1.762-0.668c-0.546-0.289-1.054-0.645-1.51-1.062c-0.923-0.833-1.596-1.907-1.941-3.103\tc-0.181-0.636-0.271-1.293-0.267-1.953c0-0.737,0.101-1.439,0.303-2.11c0.205-0.674,0.494-1.285,0.876-1.846\tc0.383-0.566,0.852-1.071,1.388-1.496c0.561-0.443,1.183-0.802,1.847-1.066C9.696,7.821,9.4,8.273,9.205,8.771\tC9,9.263,8.865,9.779,8.804,10.309h6.391c0-0.646-0.063-1.207-0.196-1.689c-0.131-0.484-0.342-0.885-0.637-1.201\tC14.07,7.099,13.694,6.856,13.23,6.7c-0.462-0.16-1.021-0.241-1.675-0.241c-0.771,0-1.543,0.111-2.314,0.344\tc-0.771,0.226-1.505,0.548-2.2,0.955C6.346,8.17,5.706,8.655,5.122,9.21c-0.583,0.562-1.074,1.165-1.474,1.819\tc0.084-0.742,0.247-1.474,0.485-2.18c0.233-0.693,0.541-1.339,0.912-1.938c0.368-0.587,0.806-1.127,1.303-1.609\tc0.496-0.483,1.046-0.898,1.655-1.235c0.608-0.336,1.253-0.608,1.955-0.792c0.732-0.168,1.481-0.253,2.233-0.254\tc0.46,0,0.917,0.041,1.375,0.124c0.457,0.084,0.903,0.196,1.339,0.342c0.864,0.297,1.635,0.713,2.315,1.239\tc0.663,0.516,1.241,1.135,1.711,1.833c0.463,0.692,0.813,1.459,1.055,2.292s0.365,1.701,0.365,2.602v2.23H20.349z"
        }
      })
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

export default __vue_component__;
